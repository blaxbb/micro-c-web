@inject IJSRuntime js;
@using System.Text.RegularExpressions;

<Modal Id="@Id">
    <div id="scanDebug" class="row">Hello</div>
    <div class="scanner-viewport row" id="scannerView">
    </div>
</Modal>

@code {
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public EventCallback<string> OnScanResult{ get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            @*await js.InvokeVoidAsync("InitBarcode", DotNetObjectReference.Create(this));*@
        }
    }

    public async Task ShowScanner()
    {
        await js.InvokeVoidAsync("InitBarcode", DotNetObjectReference.Create(this));
        @*await js.InvokeVoidAsync("StartScanner");*@
    await js.InvokeVoidAsync("ShowModal", $"#{Id}");
    }

    [JSInvokable]
    public async Task ScanResult(string result)
    {
        result = FilterBarcodeResult(result);
        if(string.IsNullOrWhiteSpace(result))
        {
            return;
        }

        await js.InvokeVoidAsync("HideModal", $"#{Id}");
        await OnScanResult.InvokeAsync(result);
    }

    public static string FilterBarcodeResult(string result)
    {
        if (Regex.IsMatch(result, "\\d{12}"))
        {
            return result;
        }

        if(result.Length < 6)
        {
            return "";
        }

        var match = Regex.Match(result, "\\d{6}");
        if (match.Success)
        {
            return match.Groups[0].Value;
        }

        return "";
    }
}